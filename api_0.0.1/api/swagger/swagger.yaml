swagger: "2.0"
info:
  version: "0.0.1"
  title:  Persisted and Identified Metadata as a Service (PIMaaS) API
  description: Specification of service that would allow creation of PIM sets by pushing a JSON schema. The returned schemaId is used to define and validate an unique set of PIMs. 
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /dead:
    # binds a127 app logic to a route
    x-swagger-router-controller: transactions
    post:
      operationId: dead
      description: deprecates transaction to dead transaction.
      consumes:
      - "application/json"
      parameters:
        - in: header
          name: privateKey
          required: true
          type: string
        - in: header
          name: publicKey
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/dead"
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: "string"
          schema:
            # a pointer to a definition
            $ref: "#/definitions/dead"

  /deprecate:
    # binds a127 app logic to a route
    x-swagger-router-controller: transactions
    post:
      operationId: deprecate
      description: deprecates old transaction to new transaction
      consumes:
      - "application/json"
      parameters:
        - in: header
          name: privateKey
          required: true
          type: string
        - in: header
          name: publicKey
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/deprecate"
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: "string"
          schema:
            # a pointer to a definition
            $ref: "#/definitions/dead"

  /pims:
    # binds a127 app logic to a route
    x-swagger-router-controller: pims
    get:
      description: Returns persisted and identified metadata (PIM)
      # used as the method name of the controller
      operationId: getPims
      parameters:
        - in: query
          name: setName
          description: Name of schema referenced in pims
          required: true
          type: string
        - in: query
          name: start
          description: start position for pagination 
          required: false
          type: integer
          default: 0
        - in: query
          name: rows
          description: number of rows to return 
          required: false
          type: integer
          minimum: 1
          maximum: 1000
          default: 10
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pimList"
        # responses may fall through to errors
    post:
      description: Creates persisted and identified data (PIM). Does require sending public and private key. Depending on security requirements you may choose to generate a transation locally using local_modules/bigchain_manager.js and post to /transactions.
      operationId: createPim
      consumes:
      - "application/json"
      parameters:
        - in: header
          name: privateKey
          required: true
          type: string
        - in: header
          name: publicKey
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pim"
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: string
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pim"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /pims/{setName}/{pimId}:
    get:
      x-swagger-router-controller: pims
      description: Returns persisted and identified metadata (PIM)
      # used as the method name of the controller
      operationId: getPim
      parameters:
        - in: path
          name: pimId
          description: ID of PIM
          required: true
          type: string
        - in: path
          name: setName
          description: Set Name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pim"
        # responses may fall through to errors
        "301": 
          description: Moved Permanently, this PIM has been superseded by a new PIM
          headers:
            Location:
              description: value points at new pim
              type: string
          schema:
            $ref: "#/definitions/pim"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /sets:
    # binds a127 app logic to a route
    x-swagger-router-controller: sets
    post:
      operationId: createSet
      description: Creates a set definition to be used with PIMs. Does require sending public and private key. Depending on security requirements you may choose to generate a transation locally using local_modules/bigchain_manager.js and post to /transactions.
      consumes:
      - "application/json"
      parameters:
        - in: header
          name: privateKey
          required: true
          type: string
        - in: header
          name: publicKey
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pimSet"
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: "string"
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pimSet"

  /sets/{setId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: sets
    get:
      description: Returns schema
      # used as the method name of the controller
      operationId: getSet
      parameters:
        - in: path
          name: setId
          description: ID of PIM set
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pimSet"
        "301": 
          description: Moved Permanently, this set has been superseded by a new set
          headers:
            Location:
              description: location of new set
              type: string
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pimSet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /transactions/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: transactions
    get:
      description: Returns transaction data from the underlying persistence layer BigChainDB. This is useful for auditing purposes. See (https://docs.bigchaindb.com/projects/server/en/latest/data-models/transaction-model.html). 
      # used as the method name of the controller
      operationId: getTransaction
      parameters:
        - in: path
          name: id
          description: ID of schema or metadata
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /transactions:
    # binds a127 app logic to a route
    x-swagger-router-controller: transactions
    post:
      description: Creates a with underlying persistence layer BigChainDB. 
      # used as the method name of the controller
      operationId: createTransaction
      consumes:
      - "application/json"
      parameters:
        - in: header
          name: privateKey
          required: true
          type: string
        - in: header
          name: publicKey
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/pimSet"
      responses:
        "201":
          description: Created
          headers:
            Location:
              type: "string"
          schema:
            # a pointer to a definition
            $ref: "#/definitions/pimSet"
            
  /ed25519Keypair:
    # binds a127 app logic to a route
    x-swagger-router-controller: bigchaindbUtil
    get:
      description: Returns a ed25519Keypair https://ed25519.cr.yp.to/
      # used as the method name of the controller
      operationId: getEd25519Keypair
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ed25519Keypair"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:
  deprecate:
    required:
      - id
      - newId 
    properties:
      id:
        description: ID of pim or schema to be deprecated
        type: string
      newId:
        description: ID of PIM  or schema to deprecate to
        type: string

  dead:
    required:
      - id
    properties:
      id:
        description: ID of pim or schema to be marked dead
        type: string

  ed25519Keypair:
    required:
      - publicKey
      - privateKey
    properties:
      publicKey:
        description: Public key
        type: string
      privateKey:
        description: Private key
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        description: human readable string
        type: string
      error-code:
        description: Optional code that identifies the specific issue
        type: string

  pim:
    required:
      - schemaId
      - metadata
    properties:
      schemaId:
        description: ID of schema used to verify the metadata is valid (enforced at the webapp level). 
        type: string
      metadata:
        description: Metadata to be persisted
        type: object

  pimList:
    required:
      - numberOfResults
    properties:
      numberOfResults:
        description: Number of results available
        type: integer
      pimArray:
        description: list of PIMs
        type: array
        items:
          type: string

  pimSet:
    required:
      - schema
      - name
    properties:
      name:
        description: Name of schema. In multinode environments there is a possibiliy of a race condition. First one in wins. 
        type: string
      schema:
        description: JSON schema used to validate PIMs. Best practice would to use JSON-LD and Schema.org, however we any JSON schema is allowed to provide the flexibly needed for your set of PIMs.
        type: object
